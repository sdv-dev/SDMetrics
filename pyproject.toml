[project]
name = 'sdmetrics'
description = 'Metrics for Synthetic Data Generation Projects'
authors = [{ name = "MIT Data To AI Lab", email = "dailabmit@gmail.com" }]
classifiers = [
    'Development Status :: 2 - Pre-Alpha',
    'Intended Audience :: Developers',
    'License :: OSI Approved :: MIT License',
    'Natural Language :: English',
    'Programming Language :: Python :: 3',
    'Programming Language :: Python :: 3.8',
    'Programming Language :: Python :: 3.9',
    'Programming Language :: Python :: 3.10',
    'Programming Language :: Python :: 3.11',
    'Programming Language :: Python :: 3.12',
]
keywords = ['sdmetrics', 'sdmetrics', 'SDMetrics']
dynamic = ['version']
license = { text = 'MIT license' }
requires-python = ">=3.8,<3.13"
readme = 'README.md'
dependencies = [
    "numpy>=1.21.0;python_version<'3.10'",
    "numpy>=1.23.3;python_version>='3.10' and python_version<'3.12'",
    "numpy>=1.26.0;python_version>='3.12'",
    "pandas>=1.4.0;python_version<'3.11'",
    "pandas>=1.5.0;python_version>='3.11' and python_version<'3.12'",
    "pandas>=2.1.1;python_version>='3.12'",
    "scikit-learn>=1.0.2;python_version<'3.10'",
    "scikit-learn>=1.1.0;python_version>='3.10' and python_version<'3.11'",
    "scikit-learn>=1.1.3;python_version>='3.11' and python_version<'3.12'",
    "scikit-learn>=1.3.1;python_version>='3.12'",
    "scipy>=1.7.3;python_version<'3.10'",
    "scipy>=1.9.2;python_version>='3.10' and python_version<'3.12'",
    "scipy>=1.12.0;python_version>='3.12'",
    'copulas>=0.11.0',
    'tqdm>=4.29',
    'plotly>=5.19.0',
]

[project.urls]
"Source Code" = "https://github.com/sdv-dev/SDMetrics"
"Issue Tracker" = "https://github.com/sdv-dev/SDMetrics/issues"
"Changes" = "https://github.com/sdv-dev/SDMetrics/blob/main/HISTORY.md"
"Twitter" = "https://twitter.com/sdv_dev"
"Chat" = "https://bit.ly/sdv-slack-invite"

[project.entry-points]
sdmetrics = { main = 'sdmetrics.cli.__main__:main' }

[project.optional-dependencies]
torch = [
    "torch>=1.8.0;python_version<'3.10'",
    "torch>=2.0.0;python_version>='3.10' and python_version<'3.12'",
    "torch>=2.2.0;python_version>='3.12'",
]
pomegranate = ['pomegranate>=0.14.1,<0.14.7']
test = [
    'sdmetrics[torch]',
    'pytest>=6.2.5,<7',
    'pytest-cov>=2.6.0,<3',
    'pytest-rerunfailures>=10.3,<15',
    'jupyter>=1.0.0,<2',
    'rundoc>=0.4.3,<0.5',
    'tomli>=2.0.0,<3',
    'invoke',
    'pytest-runner>=2.11.1',
]
dev = [
    'sdmetrics[test, torch]',

    # general
    'build>=1.0.0,<2',
    'bump-my-version>=0.18.3,<1',
    'pip>=9.0.1',
    'watchdog>=1.0.1,<5',

    # style check
    'ruff>=0.3.2,<1',

    # distribute on PyPI
    'twine>=1.10.0,<6',
    'wheel>=0.30.0',
    'packaging>=20,<25',

    # Advanced testing
    'coverage>=4.5.12,<8',
    'tox>=2.9.1,<5',
]

[tool.setuptools]
include-package-data = true
license-files = ['LICENSE']

[tool.setuptools.packages.find]
include = ['sdmetrics', 'sdmetrics.*']
namespaces = false

[tool.setuptools.package-data]
'*' = [
    'AUTHORS.rst',
    'CONTRIBUTING.rst',
    'HISTORY.md',
    'README.md',
    '*.md',
    '*.rst',
    'conf.py',
    'Makefile',
    'make.bat',
    '*.jpg',
    '*.png',
    '*.gif'
]
'sdmetrics' = ['demos/*/*.json', 'demos/*/*.csv']

[tool.setuptools.exclude-package-data]
'*' = [
    '* __pycache__',
    '*.py[co]',
    'static_code_analysis.txt',
]

[tool.setuptools.dynamic]
version = {attr = 'sdmetrics.__version__'}

[tool.isort]
line_length = 99
lines_between_types = 0
multi_line_output = 4
use_parentheses = true

[tool.pydocstyle]
convention = 'google'
add-ignore = ['D107', 'D407', 'D417']

[tool.bumpversion]
current_version = "0.17.1.dev0"
parse = '(?P<major>\d+)\.(?P<minor>\d+)\.(?P<patch>\d+)(\.(?P<release>[a-z]+)(?P<candidate>\d+))?'
serialize = [
    '{major}.{minor}.{patch}.{release}{candidate}',
	'{major}.{minor}.{patch}'
]
search = '{current_version}'
replace = '{new_version}'
regex = false
ignore_missing_version = false
tag = true
sign_tags = false
tag_name = 'v{new_version}'
tag_message = 'Bump version: {current_version} → {new_version}'
allow_dirty = false
commit = true
message = 'Bump version: {current_version} → {new_version}'
commit_args = ''

[tool.bumpversion.parts.release]
first_value = 'dev'
optional_value = 'release'
values = [
    'dev',
    'release'
]

[[tool.bumpversion.files]]
filename = "sdmetrics/__init__.py"
search = "__version__ = '{current_version}'"
replace = "__version__ = '{new_version}'"

[[tool.bumpversion.files]]
filename = "conda/meta.yaml"
search = "version = '{current_version}'"
replace = "version = '{new_version}'"

[build-system]
requires = ['setuptools', 'wheel']
build-backend = "setuptools.build_meta"

[tool.ruff]
preview = true
line-length = 100
indent-width = 4
src = ["sdmetrics"]
exclude = [
    "docs",
    ".tox",
    ".git",
    "__pycache__",
    ".ipynb_checkpoints",
    "*.ipynb",
    "tasks.py",
]

[tool.ruff.lint]
select = [
    # Pyflakes
    "F",
    # Pycodestyle
    "E",
    "W",
    # pydocstyle
    "D",
    # isort
    "I001",
    # print statements
    "T201",
    # pandas-vet
    "PD",
    # numpy 2.0
    "NPY201"
]
ignore = [
    # pydocstyle
    "D107",  # Missing docstring in __init__
    "D417",   # Missing argument descriptions in the docstring, this is a bug from pydocstyle: https://github.com/PyCQA/pydocstyle/issues/449
    "PD901",
    "PD101",
]

[tool.ruff.format]
quote-style = "single"
indent-style = "space"
preview = true
docstring-code-format = true
docstring-code-line-length = "dynamic"

[tool.ruff.lint.isort]
known-first-party = ["sdmetrics"]
lines-between-types = 0

[tool.ruff.lint.per-file-ignores]
"__init__.py" = ["F401", "E402", "F403", "F405", "E501", "I001"]
"errors.py" = ["D105"]
"tests/**.py" = ["D"]

[tool.ruff.lint.pydocstyle]
convention = "google"

[tool.ruff.lint.pycodestyle]
max-doc-length = 100
max-line-length = 100